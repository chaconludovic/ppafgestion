/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend-jpa:src/test/java/service/ModelGenerator.e.vm.java
 */
package com.eldoraludo.ppafgestion.repository;

import java.util.Date;
import javax.inject.Inject;
import javax.inject.Named;
import javax.inject.Singleton;
import com.eldoraludo.ppafgestion.domain.Contact;
import com.eldoraludo.ppafgestion.domain.Membreppaf;
import com.eldoraludo.ppafgestion.domain.Suivicontact;
import com.eldoraludo.ppafgestion.repository.ContactGenerator;
import com.eldoraludo.ppafgestion.repository.ContactRepository;
import com.eldoraludo.ppafgestion.repository.MembreppafGenerator;
import com.eldoraludo.ppafgestion.repository.MembreppafRepository;
import com.eldoraludo.ppafgestion.util.ValueGenerator;

/**
 * Helper class to create transient entities instance for testing purposes.
 * Simple properties are pre-filled with random values.
 */
@SuppressWarnings("unused")
@Named
@Singleton
public class SuivicontactGenerator {

    /**
     * Returns a new Suivicontact instance filled with random values.
     */
    public Suivicontact getSuivicontact() {
        Suivicontact suivicontact = new Suivicontact();

        // simple attributes follows
        suivicontact.setDate(new Date());
        suivicontact.setDateprochainappel(new Date());
        suivicontact.setNote("a");
        // mandatory relation
        Membreppaf membreppaf = membreppafGenerator.getMembreppaf();
        membreppafRepository.save(membreppaf);
        suivicontact.setMembreppaf(membreppaf);
        // mandatory relation
        Contact contact = contactGenerator.getContact();
        contactRepository.save(contact);
        suivicontact.setContact(contact);
        return suivicontact;
    }

    @Inject
    private MembreppafRepository membreppafRepository;
    @Inject
    private MembreppafGenerator membreppafGenerator;
    @Inject
    private ContactRepository contactRepository;
    @Inject
    private ContactGenerator contactGenerator;
}